{"ast":null,"code":"var _jsxFileName = \"/home/shallon/development/phase-5/movers-app/client/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required').test('at-symbol', 'Email must contain \"@\"', value => value.includes('@')),\n  password: Yup.string().required('Required').matches(/[A-Z]/, 'Password must contain at least one uppercase letter').matches(/[a-z]/, 'Password must contain at least one lowercase letter').matches(/[0-9]/, 'Password must contain at least one digit').matches(/[!@#$%^&*(),.?\":{}|<>]/, 'Password must contain at least one special character')\n});\nfunction Login({\n  onLoginSuccess\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [csrfToken, setCsrfToken] = useState(null);\n  useEffect(() => {\n    async function fetchCsrfToken() {\n      try {\n        const response = await fetch('/csrf_token');\n        const data = await response.json();\n        setCsrfToken(data.token);\n      } catch (error) {\n        alert(\"Error fetching CSRF token: \" + error);\n      }\n    }\n    fetchCsrfToken();\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async values => {\n      if (!csrfToken) {\n        alert(\"CSRF token is missing. Please refresh and try again.\");\n        return;\n      }\n      try {\n        const response = await fetch('/auth', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken\n          },\n          body: JSON.stringify(values),\n          credentials: 'include'\n        });\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n          const data = await response.json();\n          if (response.ok) {\n            const userResponse = await fetch('/auth', {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n              },\n              credentials: 'include'\n            });\n            if (userResponse.ok) {\n              const userData = await userResponse.json();\n              sessionStorage.setItem('userId', userData.id);\n              sessionStorage.setItem('userEmail', userData.email);\n              onLoginSuccess(userData.email);\n              alert(\"Login successful!\");\n              navigate('/');\n            } else {\n              alert(\"Error fetching user details.\");\n            }\n          } else {\n            alert(\"Login error: \" + data.message);\n          }\n        } else {\n          alert(\"An error occurred: Server did not return a JSON response.\");\n        }\n      } catch (error) {\n        alert(\"An error occurred: \" + error);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 68\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 74\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"gLCz164ZPam7PDJ5XOYpyLyW1N4=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","Yup","useNavigate","jsxDEV","_jsxDEV","LoginSchema","object","shape","email","string","required","test","value","includes","password","matches","Login","onLoginSuccess","_s","navigate","csrfToken","setCsrfToken","fetchCsrfToken","response","fetch","data","json","token","error","alert","formik","initialValues","validationSchema","onSubmit","values","method","headers","body","JSON","stringify","credentials","contentType","get","indexOf","ok","userResponse","userData","sessionStorage","setItem","id","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","type","name","onChange","handleChange","onBlur","handleBlur","touched","errors","_c","$RefreshReg$"],"sources":["/home/shallon/development/phase-5/movers-app/client/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';  \nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';  \nimport { useNavigate } from 'react-router-dom';  \n\n\nconst LoginSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email') \n        .required('Required') \n        .test('at-symbol', 'Email must contain \"@\"', value => value.includes('@')),  \n    password: Yup.string()\n        .required('Required') \n        .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')\n        .matches(/[a-z]/, 'Password must contain at least one lowercase letter')\n        .matches(/[0-9]/, 'Password must contain at least one digit')\n        .matches(/[!@#$%^&*(),.?\":{}|<>]/, 'Password must contain at least one special character')\n});\n\nfunction Login({ onLoginSuccess }) { \n    const navigate = useNavigate();  \n    const [csrfToken, setCsrfToken] = useState(null);  \n\n    useEffect(() => {\n        async function fetchCsrfToken() {\n            try {\n                const response = await fetch('/csrf_token');  \n                const data = await response.json();  \n                setCsrfToken(data.token); \n            } catch (error) {\n                alert(\"Error fetching CSRF token: \" + error);  \n            }\n        }\n        fetchCsrfToken();  \n    }, []);  \n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: LoginSchema, \n        onSubmit: async (values) => {  \n            if (!csrfToken) {\n                alert(\"CSRF token is missing. Please refresh and try again.\");\n                return;\n            }\n\n            try {\n                const response = await fetch('/auth', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-CSRFToken': csrfToken\n                    },\n                    body: JSON.stringify(values),\n                    credentials: 'include'\n                });\n\n                const contentType = response.headers.get(\"content-type\");\n                if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n                    const data = await response.json(); \n\n                    if (response.ok) {\n                        const userResponse = await fetch('/auth', {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'X-CSRFToken': csrfToken\n                            },\n                            credentials: 'include'\n                        });\n\n                        if (userResponse.ok) {\n                            const userData = await userResponse.json();\n                            sessionStorage.setItem('userId', userData.id);\n                            sessionStorage.setItem('userEmail', userData.email);\n                            onLoginSuccess(userData.email);  \n                            alert(\"Login successful!\");\n                            navigate('/'); \n                        } else {\n                            alert(\"Error fetching user details.\");\n                        }\n                    } else {\n                        alert(\"Login error: \" + data.message);\n                    }\n                } else {\n                    alert(\"An error occurred: Server did not return a JSON response.\");\n                }\n            } catch (error) {\n                alert(\"An error occurred: \" + error);\n            }\n        }\n    });\n\n    return (\n        <div className=\"login-page\">\n            <h2>Login</h2>\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Email:</label>\n                    <input \n                        type=\"email\" \n                        name=\"email\"\n                        onChange={formik.handleChange} \n                        onBlur={formik.handleBlur} \n                        value={formik.values.email}  \n                    />\n                    {formik.touched.email && formik.errors.email ? <div className=\"error\">{formik.errors.email}</div> : null}\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Password:</label>\n                    <input \n                        type=\"password\" \n                        name=\"password\"\n                        onChange={formik.handleChange}  \n                        onBlur={formik.handleBlur}  \n                        value={formik.values.password}  \n                    />\n                    {formik.touched.password && formik.errors.password ? <div className=\"error\">{formik.errors.password}</div> : null}\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Login\" />\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}