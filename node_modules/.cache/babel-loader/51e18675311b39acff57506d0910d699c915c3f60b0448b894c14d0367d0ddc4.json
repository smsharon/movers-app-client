{"ast":null,"code":"var _jsxFileName = \"/home/shallon/development/phase-5/movers-app/client/src/components/MovingPriceCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovingPriceCalculator = () => {\n  _s();\n  const [residenceType, setResidenceType] = useState('bedsitter');\n  const [startAddress, setStartAddress] = useState('');\n  const [endAddress, setEndAddress] = useState('');\n  const [distance, setDistance] = useState(null);\n  const [estimatedPrice, setEstimatedPrice] = useState(null);\n  useEffect(() => {\n    // Fetch names and distance from backend when the component mounts\n    fetchDistanceAndNamesFromBackend();\n  }, []);\n  const fetchDistanceAndNamesFromBackend = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/locations', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n          // Add any additional headers, such as authorization token, if needed\n        }\n      });\n\n      if (response.status === 200) {\n        const data = await response.json();\n        setDistance(data.distance);\n        setStartAddress(data.startAddress);\n        setEndAddress(data.endAddress);\n      } else {\n        console.error('Failed to fetch data from the backend.');\n        // Handle error as needed\n      }\n    } catch (error) {\n      console.error('Error while fetching data:', error);\n      // Handle error as needed\n    }\n  };\n\n  const calculatePrice = () => {\n    const distanceRate = 200; // Rate per km\n    const basePrice = 2000; // Base price\n\n    let residenceTypeRate = 1.2; // Default rate for bedsitter\n    if (residenceType === 'oneBedroom') {\n      residenceTypeRate = 2.0;\n    } else if (residenceType === 'studio') {\n      residenceTypeRate = 1.6;\n    } else if (residenceType === 'twoBedroom') {\n      residenceTypeRate = 2.5;\n    }\n    const totalPrice = basePrice + distance * distanceRate * residenceTypeRate;\n    return totalPrice;\n  };\n  const handleCalculatePrice = () => {\n    const totalPrice = calculatePrice();\n    setEstimatedPrice(totalPrice.toFixed(2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Moving Price Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Residence Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: residenceType,\n        onChange: e => setResidenceType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bedsitter\",\n          children: \"Bedsitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"oneBedroom\",\n          children: \"One Bedroom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"studio\",\n          children: \"Studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"twoBedroom\",\n          children: \"Two Bedroom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), distance !== null && startAddress && endAddress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Move from \", startAddress, \" to \", endAddress, \" (\", distance, \" miles)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCalculatePrice,\n        children: \"Calculate Moving Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), estimatedPrice !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Price: $\", estimatedPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MovingPriceCalculator, \"qYHc3yMpMq2aj6PmhC/U94kh3wA=\");\n_c = MovingPriceCalculator;\nexport default MovingPriceCalculator;\nvar _c;\n$RefreshReg$(_c, \"MovingPriceCalculator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","MovingPriceCalculator","_s","residenceType","setResidenceType","startAddress","setStartAddress","endAddress","setEndAddress","distance","setDistance","estimatedPrice","setEstimatedPrice","fetchDistanceAndNamesFromBackend","response","fetch","method","headers","status","data","json","console","error","calculatePrice","distanceRate","basePrice","residenceTypeRate","totalPrice","handleCalculatePrice","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/shallon/development/phase-5/movers-app/client/src/components/MovingPriceCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MovingPriceCalculator = () => {\n  const [residenceType, setResidenceType] = useState('bedsitter');\n  const [startAddress, setStartAddress] = useState('');\n  const [endAddress, setEndAddress] = useState('');\n  const [distance, setDistance] = useState(null);\n  const [estimatedPrice, setEstimatedPrice] = useState(null);\n\n  useEffect(() => {\n    // Fetch names and distance from backend when the component mounts\n    fetchDistanceAndNamesFromBackend();\n  }, []);\n\n  const fetchDistanceAndNamesFromBackend = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/locations', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          // Add any additional headers, such as authorization token, if needed\n        },\n      });\n\n      if (response.status === 200) {\n        const data = await response.json();\n        setDistance(data.distance);\n        setStartAddress(data.startAddress);\n        setEndAddress(data.endAddress);\n      } else {\n        console.error('Failed to fetch data from the backend.');\n        // Handle error as needed\n      }\n    } catch (error) {\n      console.error('Error while fetching data:', error);\n      // Handle error as needed\n    }\n  };\n\n  const calculatePrice = () => {\n    const distanceRate = 200; // Rate per km\n    const basePrice = 2000;    // Base price\n\n    let residenceTypeRate = 1.2; // Default rate for bedsitter\n    if (residenceType === 'oneBedroom') {\n      residenceTypeRate = 2.0;\n    } else if (residenceType === 'studio') {\n      residenceTypeRate = 1.6;\n    } else if (residenceType === 'twoBedroom') {\n      residenceTypeRate = 2.5;\n    }\n\n    const totalPrice = basePrice + (distance * distanceRate) * residenceTypeRate;\n\n    return totalPrice;\n  };\n\n  const handleCalculatePrice = () => {\n    const totalPrice = calculatePrice();\n    setEstimatedPrice(totalPrice.toFixed(2));\n  };\n\n  return (\n    <div>\n      <h2>Moving Price Calculator</h2>\n      <label>\n        Residence Type:\n        <select value={residenceType} onChange={(e) => setResidenceType(e.target.value)}>\n          <option value=\"bedsitter\">Bedsitter</option>\n          <option value=\"oneBedroom\">One Bedroom</option>\n          <option value=\"studio\">Studio</option>\n          <option value=\"twoBedroom\">Two Bedroom</option>\n        </select>\n      </label>\n      {distance !== null && startAddress && endAddress ? (\n        <>\n          <p>\n            Move from {startAddress} to {endAddress} ({distance} miles)\n          </p>\n          <button onClick={handleCalculatePrice}>Calculate Moving Price</button>\n          {estimatedPrice !== null && (\n            <p>\n              Estimated Price: ${estimatedPrice}\n            </p>\n          )}\n        </>\n      ) : (\n        <p>Loading data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovingPriceCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}